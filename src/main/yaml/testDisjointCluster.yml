incarnation: scafi

variables:
  seed: &seed { min: 0.0, max: 10.0, step: 1.0, default: 0.0 }

seeds: { scenario: *seed, simulation: *seed }

terminate: { type: AfterTime, parameters: [ 50 ] }

network-model:
  type: ConnectWithinDistance
  parameters: [0.75]

_gradient: &program
  - time-distribution: 1
    type: Event
    actions:
    - type: RunScafiProgram
      parameters: [ it.examples.TemperatureDisjointedBased ]
  - program: send

layers:
  - type: UniformLayer
    parameters: [ 20.0 ]
    molecule: base-temperature

  - type: BidimensionalGaussianLayer
    parameters: [ 3, -4, -2.0, 1.0 ]
    molecule: temperature-1

  - type: BidimensionalGaussianLayer
    parameters: [ 0.0, 0.0, -2.0, 1.0 ]
    molecule: temperature-2

  - type: BidimensionalGaussianLayer
    parameters: [ 2.0, 3.5, -2.0, 1.0 ]
    molecule: temperature-3

  - type: BidimensionalGaussianLayer
    parameters: [ -3.0, 2.0, -2.0, 1.0 ]
    molecule: temperature-4

  - type: BidimensionalGaussianLayer
    parameters: [ -3, -3, -2.0, 1.5 ]
    molecule: temperature-5

  - type: LayerAggregator
    molecule: temperature

deployments:
  type: Grid
  parameters: [-5, -5, 5, 5, 0.5, 0.5, 0.25, 0.25]
  programs: *program